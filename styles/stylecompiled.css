/*! tailwindcss v4.1.4 | MIT License | https://tailwindcss.com */
@import url('https://fonts.googleapis.com/css2?family=Poppins:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&display=swap');
@layer properties;
@layer theme, base, components, utilities;
@layer theme {
  :root, :host {
    --font-mono: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono",
      "Courier New", monospace;
    --color-orange-400: oklch(0.75 0.183 55.934);
    --color-gray-400: oklch(0.707 0.022 261.325);
    --color-gray-500: oklch(0.551 0.027 264.364);
    --color-black: #000;
    --color-white: #fff;
    --spacing: 0.25rem;
    --container-5xl: 64rem;
    --text-xs: 0.75rem;
    --text-xs--line-height: calc(1 / 0.75);
    --text-sm: 0.875rem;
    --text-sm--line-height: calc(1.25 / 0.875);
    --text-base: 1rem;
    --text-base--line-height: calc(1.5 / 1);
    --text-lg: 1.125rem;
    --text-lg--line-height: calc(1.75 / 1.125);
    --text-xl: 1.25rem;
    --text-xl--line-height: calc(1.75 / 1.25);
    --text-2xl: 1.5rem;
    --text-2xl--line-height: calc(2 / 1.5);
    --text-3xl: 1.875rem;
    --text-3xl--line-height: calc(2.25 / 1.875);
    --text-4xl: 2.25rem;
    --text-4xl--line-height: calc(2.5 / 2.25);
    --text-5xl: 3rem;
    --text-5xl--line-height: 1;
    --text-6xl: 3.75rem;
    --text-6xl--line-height: 1;
    --text-7xl: 4.5rem;
    --text-7xl--line-height: 1;
    --text-8xl: 6rem;
    --text-8xl--line-height: 1;
    --text-9xl: 8rem;
    --text-9xl--line-height: 1;
    --font-weight-light: 300;
    --font-weight-normal: 400;
    --font-weight-medium: 500;
    --font-weight-semibold: 600;
    --tracking-wide: 0.025em;
    --leading-tight: 1.25;
    --radius-lg: 0.5rem;
    --radius-2xl: 1rem;
    --ease-in-out: cubic-bezier(0.4, 0, 0.2, 1);
    --blur-sm: 8px;
    --blur-md: 12px;
    --blur-lg: 16px;
    --default-transition-duration: 150ms;
    --default-transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    --default-font-family: "Poppins", sans-serif;
    --default-mono-font-family: var(--font-mono);
    --color-primary: #009BAC;
  }
}
@layer base {
  *, ::after, ::before, ::backdrop, ::file-selector-button {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
    border: 0 solid;
  }
  html, :host {
    line-height: 1.5;
    -webkit-text-size-adjust: 100%;
    tab-size: 4;
    font-family: var(--default-font-family, ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji");
    font-feature-settings: var(--default-font-feature-settings, normal);
    font-variation-settings: var(--default-font-variation-settings, normal);
    -webkit-tap-highlight-color: transparent;
  }
  hr {
    height: 0;
    color: inherit;
    border-top-width: 1px;
  }
  abbr:where([title]) {
    -webkit-text-decoration: underline dotted;
    text-decoration: underline dotted;
  }
  h1, h2, h3, h4, h5, h6 {
    font-size: inherit;
    font-weight: inherit;
  }
  a {
    color: inherit;
    -webkit-text-decoration: inherit;
    text-decoration: inherit;
  }
  b, strong {
    font-weight: bolder;
  }
  code, kbd, samp, pre {
    font-family: var(--default-mono-font-family, ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace);
    font-feature-settings: var(--default-mono-font-feature-settings, normal);
    font-variation-settings: var(--default-mono-font-variation-settings, normal);
    font-size: 1em;
  }
  small {
    font-size: 80%;
  }
  sub, sup {
    font-size: 75%;
    line-height: 0;
    position: relative;
    vertical-align: baseline;
  }
  sub {
    bottom: -0.25em;
  }
  sup {
    top: -0.5em;
  }
  table {
    text-indent: 0;
    border-color: inherit;
    border-collapse: collapse;
  }
  :-moz-focusring {
    outline: auto;
  }
  progress {
    vertical-align: baseline;
  }
  summary {
    display: list-item;
  }
  ol, ul, menu {
    list-style: none;
  }
  img, svg, video, canvas, audio, iframe, embed, object {
    display: block;
    vertical-align: middle;
  }
  img, video {
    max-width: 100%;
    height: auto;
  }
  button, input, select, optgroup, textarea, ::file-selector-button {
    font: inherit;
    font-feature-settings: inherit;
    font-variation-settings: inherit;
    letter-spacing: inherit;
    color: inherit;
    border-radius: 0;
    background-color: transparent;
    opacity: 1;
  }
  :where(select:is([multiple], [size])) optgroup {
    font-weight: bolder;
  }
  :where(select:is([multiple], [size])) optgroup option {
    padding-inline-start: 20px;
  }
  ::file-selector-button {
    margin-inline-end: 4px;
  }
  ::placeholder {
    opacity: 1;
  }
  @supports (not (-webkit-appearance: -apple-pay-button))  or (contain-intrinsic-size: 1px) {
    ::placeholder {
      color: currentColor;
      @supports (color: color-mix(in lab, red, red)) {
        color: color-mix(in oklab, currentColor 50%, transparent);
      }
    }
  }
  textarea {
    resize: vertical;
  }
  ::-webkit-search-decoration {
    -webkit-appearance: none;
  }
  ::-webkit-date-and-time-value {
    min-height: 1lh;
    text-align: inherit;
  }
  ::-webkit-datetime-edit {
    display: inline-flex;
  }
  ::-webkit-datetime-edit-fields-wrapper {
    padding: 0;
  }
  ::-webkit-datetime-edit, ::-webkit-datetime-edit-year-field, ::-webkit-datetime-edit-month-field, ::-webkit-datetime-edit-day-field, ::-webkit-datetime-edit-hour-field, ::-webkit-datetime-edit-minute-field, ::-webkit-datetime-edit-second-field, ::-webkit-datetime-edit-millisecond-field, ::-webkit-datetime-edit-meridiem-field {
    padding-block: 0;
  }
  :-moz-ui-invalid {
    box-shadow: none;
  }
  button, input:where([type="button"], [type="reset"], [type="submit"]), ::file-selector-button {
    appearance: button;
  }
  ::-webkit-inner-spin-button, ::-webkit-outer-spin-button {
    height: auto;
  }
  [hidden]:where(:not([hidden="until-found"])) {
    display: none !important;
  }
}
@layer utilities {
  .invisible {
    visibility: hidden;
  }
  .visible {
    visibility: visible;
  }
  .absolute {
    position: absolute;
  }
  .fixed {
    position: fixed;
  }
  .relative {
    position: relative;
  }
  .inset-0 {
    inset: calc(var(--spacing) * 0);
  }
  .-top-1 {
    top: calc(var(--spacing) * -1);
  }
  .top-0 {
    top: calc(var(--spacing) * 0);
  }
  .top-40 {
    top: calc(var(--spacing) * 40);
  }
  .-right-1 {
    right: calc(var(--spacing) * -1);
  }
  .right-16 {
    right: calc(var(--spacing) * 16);
  }
  .-bottom-1 {
    bottom: calc(var(--spacing) * -1);
  }
  .bottom-10 {
    bottom: calc(var(--spacing) * 10);
  }
  .bottom-16 {
    bottom: calc(var(--spacing) * 16);
  }
  .-left-1 {
    left: calc(var(--spacing) * -1);
  }
  .left-0 {
    left: calc(var(--spacing) * 0);
  }
  .z-0 {
    z-index: 0;
  }
  .z-10 {
    z-index: 10;
  }
  .z-20 {
    z-index: 20;
  }
  .col-span-2 {
    grid-column: span 2 / span 2;
  }
  .container {
    width: 100%;
    @media (width >= 40rem) {
      max-width: 40rem;
    }
    @media (width >= 48rem) {
      max-width: 48rem;
    }
    @media (width >= 64rem) {
      max-width: 64rem;
    }
    @media (width >= 80rem) {
      max-width: 80rem;
    }
    @media (width >= 96rem) {
      max-width: 96rem;
    }
  }
  .mx-2 {
    margin-inline: calc(var(--spacing) * 2);
  }
  .mt-3 {
    margin-top: calc(var(--spacing) * 3);
  }
  .mt-5 {
    margin-top: calc(var(--spacing) * 5);
  }
  .mt-10 {
    margin-top: calc(var(--spacing) * 10);
  }
  .mt-20 {
    margin-top: calc(var(--spacing) * 20);
  }
  .mt-64 {
    margin-top: calc(var(--spacing) * 64);
  }
  .vertical-card-content {
    display: flex;
    height: 100%;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    padding-inline: calc(var(--spacing) * 4);
    padding-block: calc(var(--spacing) * 16);
    text-align: center;
    color: var(--color-white);
    @media (width >= 80rem) {
      justify-content: space-between;
    }
  }
  .block {
    display: block;
  }
  .contents {
    display: contents;
  }
  .flex {
    display: flex;
  }
  .grid {
    display: grid;
  }
  .hidden {
    display: none;
  }
  .inline {
    display: inline;
  }
  .inline-block {
    display: inline-block;
  }
  .table {
    display: table;
  }
  .vertical-card-container {
    aspect-ratio: 1 / 1;
    width: calc(var(--spacing) * 40);
    height: calc(var(--spacing) * 40);
    height: 100%;
    align-content: center;
    overflow: hidden;
    border-radius: var(--radius-2xl);
    background-color: var(--color-gray-500);
    background-size: cover;
    background-position: center;
    @media (width >= 48rem) {
      width: calc(var(--spacing) * 52);
      height: calc(var(--spacing) * 52);
    }
    @media (width >= 80rem) {
      height: 600px;
    }
    @media (width >= 80rem) {
      width: 200px;
    }
    @media (width >= 80rem) {
      border-radius: 0;
    }
    @media (width >= 96rem) {
      height: 732px;
    }
    @media (width >= 96rem) {
      width: 260px;
    }
  }
  .size-8 {
    width: calc(var(--spacing) * 8);
    height: calc(var(--spacing) * 8);
  }
  .size-11 {
    width: calc(var(--spacing) * 11);
    height: calc(var(--spacing) * 11);
  }
  .size-14 {
    width: calc(var(--spacing) * 14);
    height: calc(var(--spacing) * 14);
  }
  .size-20 {
    width: calc(var(--spacing) * 20);
    height: calc(var(--spacing) * 20);
  }
  .size-48 {
    width: calc(var(--spacing) * 48);
    height: calc(var(--spacing) * 48);
  }
  .h-0 {
    height: calc(var(--spacing) * 0);
  }
  .h-0\.5 {
    height: calc(var(--spacing) * 0.5);
  }
  .h-16 {
    height: calc(var(--spacing) * 16);
  }
  .h-24 {
    height: calc(var(--spacing) * 24);
  }
  .h-48 {
    height: calc(var(--spacing) * 48);
  }
  .h-\[200px\] {
    height: 200px;
  }
  .h-\[400px\] {
    height: 400px;
  }
  .h-\[510px\] {
    height: 510px;
  }
  .h-\[600px\] {
    height: 600px;
  }
  .h-\[800px\] {
    height: 800px;
  }
  .h-\[1000px\] {
    height: 1000px;
  }
  .h-\[1200px\] {
    height: 1200px;
  }
  .h-\[1400px\] {
    height: 1400px;
  }
  .h-\[1600px\] {
    height: 1600px;
  }
  .h-\[1800px\] {
    height: 1800px;
  }
  .h-\[2000px\] {
    height: 2000px;
  }
  .h-auto {
    height: auto;
  }
  .h-dvh {
    height: 100dvh;
  }
  .h-full {
    height: 100%;
  }
  .h-screen {
    height: 100vh;
  }
  .min-h-\[600px\] {
    min-height: 600px;
  }
  .w-0 {
    width: calc(var(--spacing) * 0);
  }
  .w-0\.5 {
    width: calc(var(--spacing) * 0.5);
  }
  .w-1 {
    width: calc(var(--spacing) * 1);
  }
  .w-1\/2 {
    width: calc(1/2 * 100%);
  }
  .w-2 {
    width: calc(var(--spacing) * 2);
  }
  .w-2\/3 {
    width: calc(2/3 * 100%);
  }
  .w-3 {
    width: calc(var(--spacing) * 3);
  }
  .w-3\/4 {
    width: calc(3/4 * 100%);
  }
  .w-3\/5 {
    width: calc(3/5 * 100%);
  }
  .w-6 {
    width: calc(var(--spacing) * 6);
  }
  .w-6\/12 {
    width: calc(6/12 * 100%);
  }
  .w-9 {
    width: calc(var(--spacing) * 9);
  }
  .w-9\/12 {
    width: calc(9/12 * 100%);
  }
  .w-20 {
    width: calc(var(--spacing) * 20);
  }
  .w-\[373px\] {
    width: 373px;
  }
  .w-auto {
    width: auto;
  }
  .w-fit {
    width: fit-content;
  }
  .w-full {
    width: 100%;
  }
  .w-max {
    width: max-content;
  }
  .max-w-5xl {
    max-width: var(--container-5xl);
  }
  .max-w-80 {
    max-width: calc(var(--spacing) * 80);
  }
  .max-w-96 {
    max-width: calc(var(--spacing) * 96);
  }
  .border-collapse {
    border-collapse: collapse;
  }
  .-translate-y-20 {
    --tw-translate-y: calc(var(--spacing) * -20);
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }
  .translate-y-0 {
    --tw-translate-y: calc(var(--spacing) * 0);
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }
  .translate-y-28 {
    --tw-translate-y: calc(var(--spacing) * 28);
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }
  .rotate-0 {
    rotate: 0deg;
  }
  .rotate-90 {
    rotate: 90deg;
  }
  .transform {
    transform: var(--tw-rotate-x,) var(--tw-rotate-y,) var(--tw-rotate-z,) var(--tw-skew-x,) var(--tw-skew-y,);
  }
  .animate-\[slide_10s_linear_infinite\] {
    animation: slide 10s linear infinite;
  }
  .cursor-pointer {
    cursor: pointer;
  }
  .resize {
    resize: both;
  }
  .grid-cols-2 {
    grid-template-columns: repeat(2, minmax(0, 1fr));
  }
  .grid-cols-3 {
    grid-template-columns: repeat(3, minmax(0, 1fr));
  }
  .flex-col {
    flex-direction: column;
  }
  .flex-wrap {
    flex-wrap: wrap;
  }
  .content-center {
    align-content: center;
  }
  .items-center {
    align-items: center;
  }
  .items-end {
    align-items: flex-end;
  }
  .items-start {
    align-items: flex-start;
  }
  .justify-between {
    justify-content: space-between;
  }
  .justify-center {
    justify-content: center;
  }
  .justify-end {
    justify-content: flex-end;
  }
  .justify-items-center {
    justify-items: center;
  }
  .gap-2 {
    gap: calc(var(--spacing) * 2);
  }
  .gap-3 {
    gap: calc(var(--spacing) * 3);
  }
  .gap-4 {
    gap: calc(var(--spacing) * 4);
  }
  .gap-6 {
    gap: calc(var(--spacing) * 6);
  }
  .gap-8 {
    gap: calc(var(--spacing) * 8);
  }
  .gap-10 {
    gap: calc(var(--spacing) * 10);
  }
  .gap-14 {
    gap: calc(var(--spacing) * 14);
  }
  .gap-16 {
    gap: calc(var(--spacing) * 16);
  }
  .overflow-auto {
    overflow: auto;
  }
  .overflow-hidden {
    overflow: hidden;
  }
  .rounded-full {
    border-radius: calc(infinity * 1px);
  }
  .rounded-lg {
    border-radius: var(--radius-lg);
  }
  .border {
    border-style: var(--tw-border-style);
    border-width: 1px;
  }
  .border-b {
    border-bottom-style: var(--tw-border-style);
    border-bottom-width: 1px;
  }
  .border-b-2 {
    border-bottom-style: var(--tw-border-style);
    border-bottom-width: 2px;
  }
  .border-black {
    border-color: var(--color-black);
  }
  .border-black\/20 {
    border-color: color-mix(in srgb, #000 20%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      border-color: color-mix(in oklab, var(--color-black) 20%, transparent);
    }
  }
  .border-primary {
    border-color: var(--color-primary);
  }
  .border-white {
    border-color: var(--color-white);
  }
  .border-b-white {
    border-bottom-color: var(--color-white);
  }
  .bg-black {
    background-color: var(--color-black);
  }
  .bg-black\/30 {
    background-color: color-mix(in srgb, #000 30%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-black) 30%, transparent);
    }
  }
  .bg-gray-400 {
    background-color: var(--color-gray-400);
  }
  .bg-gray-500 {
    background-color: var(--color-gray-500);
  }
  .bg-primary {
    background-color: var(--color-primary);
  }
  .bg-white {
    background-color: var(--color-white);
  }
  .bg-white\/10 {
    background-color: color-mix(in srgb, #fff 10%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-white) 10%, transparent);
    }
  }
  .black-gradient-from-bottom {
    --tw-gradient-position: to top in oklab;
    background-image: linear-gradient(var(--tw-gradient-stops));
    --tw-gradient-from: color-mix(in srgb, #000 40%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --tw-gradient-from: color-mix(in oklab, var(--color-black) 40%, transparent);
    }
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    --tw-gradient-to: transparent;
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .bg-\[url\(\/assets\/images\/together\.jpeg\)\] {
    background-image: url(/assets/images/together.jpeg);
  }
  .bg-contain {
    background-size: contain;
  }
  .bg-cover {
    background-size: cover;
  }
  .bg-center {
    background-position: center;
  }
  .bg-left {
    background-position: left;
  }
  .bg-no-repeat {
    background-repeat: no-repeat;
  }
  .object-contain {
    object-fit: contain;
  }
  .object-cover {
    object-fit: cover;
  }
  .object-right {
    object-position: right;
  }
  .p-2 {
    padding: calc(var(--spacing) * 2);
  }
  .p-4 {
    padding: calc(var(--spacing) * 4);
  }
  .p-14 {
    padding: calc(var(--spacing) * 14);
  }
  .px-4 {
    padding-inline: calc(var(--spacing) * 4);
  }
  .px-6 {
    padding-inline: calc(var(--spacing) * 6);
  }
  .px-40 {
    padding-inline: calc(var(--spacing) * 40);
  }
  .py-1 {
    padding-block: calc(var(--spacing) * 1);
  }
  .py-2 {
    padding-block: calc(var(--spacing) * 2);
  }
  .py-4 {
    padding-block: calc(var(--spacing) * 4);
  }
  .py-14 {
    padding-block: calc(var(--spacing) * 14);
  }
  .py-20 {
    padding-block: calc(var(--spacing) * 20);
  }
  .py-30 {
    padding-block: calc(var(--spacing) * 30);
  }
  .py-40 {
    padding-block: calc(var(--spacing) * 40);
  }
  .pt-10 {
    padding-top: calc(var(--spacing) * 10);
  }
  .pb-10 {
    padding-bottom: calc(var(--spacing) * 10);
  }
  .pb-14 {
    padding-bottom: calc(var(--spacing) * 14);
  }
  .text-center {
    text-align: center;
  }
  .text-end {
    text-align: end;
  }
  .font-joyful-lg {
    font-family: 'Joyful';
    font-size: 310px;
    --tw-leading: 80px;
    line-height: 80px;
    --tw-tracking: var(--tracking-wide);
    letter-spacing: var(--tracking-wide);
  }
  .font-joyful-sm {
    font-family: 'Joyful';
    font-size: 170px;
    --tw-leading: 50px;
    line-height: 50px;
    --tw-tracking: var(--tracking-wide);
    letter-spacing: var(--tracking-wide);
  }
  .font-joyful-xs {
    font-family: 'Joyful';
    font-size: 70px;
    --tw-leading: 30px;
    line-height: 30px;
    --tw-tracking: var(--tracking-wide);
    letter-spacing: var(--tracking-wide);
  }
  .text-2xl {
    font-size: var(--text-2xl);
    line-height: var(--tw-leading, var(--text-2xl--line-height));
  }
  .text-3xl {
    font-size: var(--text-3xl);
    line-height: var(--tw-leading, var(--text-3xl--line-height));
  }
  .text-5xl {
    font-size: var(--text-5xl);
    line-height: var(--tw-leading, var(--text-5xl--line-height));
  }
  .text-6xl {
    font-size: var(--text-6xl);
    line-height: var(--tw-leading, var(--text-6xl--line-height));
  }
  .text-9xl {
    font-size: var(--text-9xl);
    line-height: var(--tw-leading, var(--text-9xl--line-height));
  }
  .text-base {
    font-size: var(--text-base);
    line-height: var(--tw-leading, var(--text-base--line-height));
  }
  .text-lg {
    font-size: var(--text-lg);
    line-height: var(--tw-leading, var(--text-lg--line-height));
  }
  .text-sm {
    font-size: var(--text-sm);
    line-height: var(--tw-leading, var(--text-sm--line-height));
  }
  .text-xl {
    font-size: var(--text-xl);
    line-height: var(--tw-leading, var(--text-xl--line-height));
  }
  .text-xs {
    font-size: var(--text-xs);
    line-height: var(--tw-leading, var(--text-xs--line-height));
  }
  .\!leading-\[60px\] {
    --tw-leading: 60px !important;
    line-height: 60px !important;
  }
  .leading-5 {
    --tw-leading: calc(var(--spacing) * 5);
    line-height: calc(var(--spacing) * 5);
  }
  .leading-tight {
    --tw-leading: var(--leading-tight);
    line-height: var(--leading-tight);
  }
  .\!font-medium {
    --tw-font-weight: var(--font-weight-medium) !important;
    font-weight: var(--font-weight-medium) !important;
  }
  .font-light {
    --tw-font-weight: var(--font-weight-light);
    font-weight: var(--font-weight-light);
  }
  .font-semibold {
    --tw-font-weight: var(--font-weight-semibold);
    font-weight: var(--font-weight-semibold);
  }
  .\!text-primary {
    color: var(--color-primary) !important;
  }
  .text-black {
    color: var(--color-black);
  }
  .text-black\/40 {
    color: color-mix(in srgb, #000 40%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      color: color-mix(in oklab, var(--color-black) 40%, transparent);
    }
  }
  .text-primary {
    color: var(--color-primary);
  }
  .text-white {
    color: var(--color-white);
  }
  .lowercase {
    text-transform: lowercase;
  }
  .uppercase {
    text-transform: uppercase;
  }
  .underline {
    text-decoration-line: underline;
  }
  .opacity-0 {
    opacity: 0%;
  }
  .opacity-100 {
    opacity: 100%;
  }
  .outline {
    outline-style: var(--tw-outline-style);
    outline-width: 1px;
  }
  .filter {
    filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);
  }
  .backdrop-blur-sm {
    --tw-backdrop-blur: blur(var(--blur-sm));
    -webkit-backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);
    backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);
  }
  .backdrop-filter {
    -webkit-backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);
    backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);
  }
  .transition {
    transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to, opacity, box-shadow, transform, translate, scale, rotate, filter, -webkit-backdrop-filter, backdrop-filter;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .transition-all {
    transition-property: all;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .transition-colors {
    transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .transition-transform {
    transition-property: transform, translate, scale, rotate;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .duration-300 {
    --tw-duration: 300ms;
    transition-duration: 300ms;
  }
  .duration-500 {
    --tw-duration: 500ms;
    transition-duration: 500ms;
  }
  .duration-700 {
    --tw-duration: 700ms;
    transition-duration: 700ms;
  }
  .duration-1000 {
    --tw-duration: 1000ms;
    transition-duration: 1000ms;
  }
  .ease-in-out {
    --tw-ease: var(--ease-in-out);
    transition-timing-function: var(--ease-in-out);
  }
  .group-hover\:h-9\/12 {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        height: calc(9/12 * 100%);
      }
    }
  }
  .group-hover\:w-9\/12 {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        width: calc(9/12 * 100%);
      }
    }
  }
  .group-hover\:-translate-y-20 {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        --tw-translate-y: calc(var(--spacing) * -20);
        translate: var(--tw-translate-x) var(--tw-translate-y);
      }
    }
  }
  .group-hover\:opacity-100 {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        opacity: 100%;
      }
    }
  }
  .after\:mt-2 {
    &::after {
      content: var(--tw-content);
      margin-top: calc(var(--spacing) * 2);
    }
  }
  .after\:block {
    &::after {
      content: var(--tw-content);
      display: block;
    }
  }
  .after\:size-4 {
    &::after {
      content: var(--tw-content);
      width: calc(var(--spacing) * 4);
      height: calc(var(--spacing) * 4);
    }
  }
  .after\:bg-\[url\(\/assets\/icons\/chevron-right-black\.svg\)\] {
    &::after {
      content: var(--tw-content);
      background-image: url(/assets/icons/chevron-right-black.svg);
    }
  }
  .after\:bg-contain {
    &::after {
      content: var(--tw-content);
      background-size: contain;
    }
  }
  .after\:bg-no-repeat {
    &::after {
      content: var(--tw-content);
      background-repeat: no-repeat;
    }
  }
  .md\:size-28 {
    @media (width >= 48rem) {
      width: calc(var(--spacing) * 28);
      height: calc(var(--spacing) * 28);
    }
  }
  .md\:h-28 {
    @media (width >= 48rem) {
      height: calc(var(--spacing) * 28);
    }
  }
  .md\:w-1\/2 {
    @media (width >= 48rem) {
      width: calc(1/2 * 100%);
    }
  }
  .md\:w-2\/3 {
    @media (width >= 48rem) {
      width: calc(2/3 * 100%);
    }
  }
  .md\:w-3\/4 {
    @media (width >= 48rem) {
      width: calc(3/4 * 100%);
    }
  }
  .md\:w-full {
    @media (width >= 48rem) {
      width: 100%;
    }
  }
  .md\:translate-y-20 {
    @media (width >= 48rem) {
      --tw-translate-y: calc(var(--spacing) * 20);
      translate: var(--tw-translate-x) var(--tw-translate-y);
    }
  }
  .md\:translate-y-40 {
    @media (width >= 48rem) {
      --tw-translate-y: calc(var(--spacing) * 40);
      translate: var(--tw-translate-x) var(--tw-translate-y);
    }
  }
  .md\:flex-row {
    @media (width >= 48rem) {
      flex-direction: row;
    }
  }
  .md\:justify-between {
    @media (width >= 48rem) {
      justify-content: space-between;
    }
  }
  .md\:px-10 {
    @media (width >= 48rem) {
      padding-inline: calc(var(--spacing) * 10);
    }
  }
  .md\:text-start {
    @media (width >= 48rem) {
      text-align: start;
    }
  }
  .md\:text-2xl {
    @media (width >= 48rem) {
      font-size: var(--text-2xl);
      line-height: var(--tw-leading, var(--text-2xl--line-height));
    }
  }
  .md\:text-8xl {
    @media (width >= 48rem) {
      font-size: var(--text-8xl);
      line-height: var(--tw-leading, var(--text-8xl--line-height));
    }
  }
  .md\:text-9xl {
    @media (width >= 48rem) {
      font-size: var(--text-9xl);
      line-height: var(--tw-leading, var(--text-9xl--line-height));
    }
  }
  .lg\:block {
    @media (width >= 64rem) {
      display: block;
    }
  }
  .lg\:flex {
    @media (width >= 64rem) {
      display: flex;
    }
  }
  .lg\:hidden {
    @media (width >= 64rem) {
      display: none;
    }
  }
  .lg\:size-36 {
    @media (width >= 64rem) {
      width: calc(var(--spacing) * 36);
      height: calc(var(--spacing) * 36);
    }
  }
  .lg\:h-32 {
    @media (width >= 64rem) {
      height: calc(var(--spacing) * 32);
    }
  }
  .lg\:h-\[600px\] {
    @media (width >= 64rem) {
      height: 600px;
    }
  }
  .lg\:h-\[800px\] {
    @media (width >= 64rem) {
      height: 800px;
    }
  }
  .lg\:h-\[1000px\] {
    @media (width >= 64rem) {
      height: 1000px;
    }
  }
  .lg\:h-\[1200px\] {
    @media (width >= 64rem) {
      height: 1200px;
    }
  }
  .lg\:h-\[1400px\] {
    @media (width >= 64rem) {
      height: 1400px;
    }
  }
  .lg\:h-\[1600px\] {
    @media (width >= 64rem) {
      height: 1600px;
    }
  }
  .lg\:h-\[1800px\] {
    @media (width >= 64rem) {
      height: 1800px;
    }
  }
  .lg\:h-\[2000px\] {
    @media (width >= 64rem) {
      height: 2000px;
    }
  }
  .lg\:h-\[2200px\] {
    @media (width >= 64rem) {
      height: 2200px;
    }
  }
  .lg\:h-\[2400px\] {
    @media (width >= 64rem) {
      height: 2400px;
    }
  }
  .lg\:w-1\/2 {
    @media (width >= 64rem) {
      width: calc(1/2 * 100%);
    }
  }
  .lg\:w-\[50\%\] {
    @media (width >= 64rem) {
      width: 50%;
    }
  }
  .lg\:w-\[90\%\] {
    @media (width >= 64rem) {
      width: 90%;
    }
  }
  .lg\:w-full {
    @media (width >= 64rem) {
      width: 100%;
    }
  }
  .lg\:max-w-none {
    @media (width >= 64rem) {
      max-width: none;
    }
  }
  .lg\:translate-y-20 {
    @media (width >= 64rem) {
      --tw-translate-y: calc(var(--spacing) * 20);
      translate: var(--tw-translate-x) var(--tw-translate-y);
    }
  }
  .lg\:flex-col {
    @media (width >= 64rem) {
      flex-direction: column;
    }
  }
  .lg\:flex-col-reverse {
    @media (width >= 64rem) {
      flex-direction: column-reverse;
    }
  }
  .lg\:flex-row {
    @media (width >= 64rem) {
      flex-direction: row;
    }
  }
  .lg\:items-end {
    @media (width >= 64rem) {
      align-items: flex-end;
    }
  }
  .lg\:items-start {
    @media (width >= 64rem) {
      align-items: flex-start;
    }
  }
  .lg\:justify-between {
    @media (width >= 64rem) {
      justify-content: space-between;
    }
  }
  .lg\:justify-center {
    @media (width >= 64rem) {
      justify-content: center;
    }
  }
  .lg\:justify-items-start {
    @media (width >= 64rem) {
      justify-items: start;
    }
  }
  .lg\:gap-6 {
    @media (width >= 64rem) {
      gap: calc(var(--spacing) * 6);
    }
  }
  .lg\:gap-10 {
    @media (width >= 64rem) {
      gap: calc(var(--spacing) * 10);
    }
  }
  .lg\:gap-16 {
    @media (width >= 64rem) {
      gap: calc(var(--spacing) * 16);
    }
  }
  .lg\:gap-20 {
    @media (width >= 64rem) {
      gap: calc(var(--spacing) * 20);
    }
  }
  .lg\:gap-24 {
    @media (width >= 64rem) {
      gap: calc(var(--spacing) * 24);
    }
  }
  .lg\:gap-32 {
    @media (width >= 64rem) {
      gap: calc(var(--spacing) * 32);
    }
  }
  .lg\:gap-40 {
    @media (width >= 64rem) {
      gap: calc(var(--spacing) * 40);
    }
  }
  .lg\:border-0 {
    @media (width >= 64rem) {
      border-style: var(--tw-border-style);
      border-width: 0px;
    }
  }
  .lg\:black-gradient-from-bottom {
    @media (width >= 64rem) {
      --tw-gradient-position: to top in oklab;
      background-image: linear-gradient(var(--tw-gradient-stops));
      --tw-gradient-from: color-mix(in srgb, #000 40%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        --tw-gradient-from: color-mix(in oklab, var(--color-black) 40%, transparent);
      }
      --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
      --tw-gradient-to: transparent;
      --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }
  }
  .lg\:black-gradient-from-top {
    @media (width >= 64rem) {
      --tw-gradient-position: to bottom in oklab;
      background-image: linear-gradient(var(--tw-gradient-stops));
      --tw-gradient-from: color-mix(in srgb, #000 40%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        --tw-gradient-from: color-mix(in oklab, var(--color-black) 40%, transparent);
      }
      --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
      --tw-gradient-to: transparent;
      --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }
  }
  .lg\:p-20 {
    @media (width >= 64rem) {
      padding: calc(var(--spacing) * 20);
    }
  }
  .lg\:px-16 {
    @media (width >= 64rem) {
      padding-inline: calc(var(--spacing) * 16);
    }
  }
  .lg\:px-20 {
    @media (width >= 64rem) {
      padding-inline: calc(var(--spacing) * 20);
    }
  }
  .lg\:px-40 {
    @media (width >= 64rem) {
      padding-inline: calc(var(--spacing) * 40);
    }
  }
  .lg\:py-36 {
    @media (width >= 64rem) {
      padding-block: calc(var(--spacing) * 36);
    }
  }
  .lg\:pb-32 {
    @media (width >= 64rem) {
      padding-bottom: calc(var(--spacing) * 32);
    }
  }
  .lg\:text-start {
    @media (width >= 64rem) {
      text-align: start;
    }
  }
  .lg\:font-joyful-sm {
    @media (width >= 64rem) {
      font-family: 'Joyful';
      font-size: 170px;
      --tw-leading: 50px;
      line-height: 50px;
      --tw-tracking: var(--tracking-wide);
      letter-spacing: var(--tracking-wide);
    }
  }
  .lg\:text-2xl {
    @media (width >= 64rem) {
      font-size: var(--text-2xl);
      line-height: var(--tw-leading, var(--text-2xl--line-height));
    }
  }
  .lg\:text-5xl {
    @media (width >= 64rem) {
      font-size: var(--text-5xl);
      line-height: var(--tw-leading, var(--text-5xl--line-height));
    }
  }
  .lg\:text-6xl {
    @media (width >= 64rem) {
      font-size: var(--text-6xl);
      line-height: var(--tw-leading, var(--text-6xl--line-height));
    }
  }
  .lg\:text-7xl {
    @media (width >= 64rem) {
      font-size: var(--text-7xl);
      line-height: var(--tw-leading, var(--text-7xl--line-height));
    }
  }
  .lg\:text-8xl {
    @media (width >= 64rem) {
      font-size: var(--text-8xl);
      line-height: var(--tw-leading, var(--text-8xl--line-height));
    }
  }
  .lg\:text-xl {
    @media (width >= 64rem) {
      font-size: var(--text-xl);
      line-height: var(--tw-leading, var(--text-xl--line-height));
    }
  }
  .lg\:text-\[130px\] {
    @media (width >= 64rem) {
      font-size: 130px;
    }
  }
  .lg\:leading-10 {
    @media (width >= 64rem) {
      --tw-leading: calc(var(--spacing) * 10);
      line-height: calc(var(--spacing) * 10);
    }
  }
  .xl\:block {
    @media (width >= 80rem) {
      display: block;
    }
  }
  .xl\:flex {
    @media (width >= 80rem) {
      display: flex;
    }
  }
  .xl\:hidden {
    @media (width >= 80rem) {
      display: none;
    }
  }
  .xl\:w-1\/2 {
    @media (width >= 80rem) {
      width: calc(1/2 * 100%);
    }
  }
  .xl\:w-\[12\%\] {
    @media (width >= 80rem) {
      width: 12%;
    }
  }
  .xl\:w-\[90\%\] {
    @media (width >= 80rem) {
      width: 90%;
    }
  }
  .xl\:w-\[100\%\] {
    @media (width >= 80rem) {
      width: 100%;
    }
  }
  .xl\:w-\[120\%\] {
    @media (width >= 80rem) {
      width: 120%;
    }
  }
  .xl\:translate-y-0 {
    @media (width >= 80rem) {
      --tw-translate-y: calc(var(--spacing) * 0);
      translate: var(--tw-translate-x) var(--tw-translate-y);
    }
  }
  .xl\:translate-y-28 {
    @media (width >= 80rem) {
      --tw-translate-y: calc(var(--spacing) * 28);
      translate: var(--tw-translate-x) var(--tw-translate-y);
    }
  }
  .xl\:flex-nowrap {
    @media (width >= 80rem) {
      flex-wrap: nowrap;
    }
  }
  .xl\:items-start {
    @media (width >= 80rem) {
      align-items: flex-start;
    }
  }
  .xl\:justify-center {
    @media (width >= 80rem) {
      justify-content: center;
    }
  }
  .xl\:gap-6 {
    @media (width >= 80rem) {
      gap: calc(var(--spacing) * 6);
    }
  }
  .xl\:gap-32 {
    @media (width >= 80rem) {
      gap: calc(var(--spacing) * 32);
    }
  }
  .xl\:gap-56 {
    @media (width >= 80rem) {
      gap: calc(var(--spacing) * 56);
    }
  }
  .xl\:border {
    @media (width >= 80rem) {
      border-style: var(--tw-border-style);
      border-width: 1px;
    }
  }
  .xl\:border-white {
    @media (width >= 80rem) {
      border-color: var(--color-white);
    }
  }
  .xl\:bg-white\/30 {
    @media (width >= 80rem) {
      background-color: color-mix(in srgb, #fff 30%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-white) 30%, transparent);
      }
    }
  }
  .xl\:p-5 {
    @media (width >= 80rem) {
      padding: calc(var(--spacing) * 5);
    }
  }
  .xl\:px-16 {
    @media (width >= 80rem) {
      padding-inline: calc(var(--spacing) * 16);
    }
  }
  .xl\:px-26 {
    @media (width >= 80rem) {
      padding-inline: calc(var(--spacing) * 26);
    }
  }
  .xl\:px-56 {
    @media (width >= 80rem) {
      padding-inline: calc(var(--spacing) * 56);
    }
  }
  .xl\:px-64 {
    @media (width >= 80rem) {
      padding-inline: calc(var(--spacing) * 64);
    }
  }
  .xl\:py-11 {
    @media (width >= 80rem) {
      padding-block: calc(var(--spacing) * 11);
    }
  }
  .xl\:py-64 {
    @media (width >= 80rem) {
      padding-block: calc(var(--spacing) * 64);
    }
  }
  .xl\:text-7xl {
    @media (width >= 80rem) {
      font-size: var(--text-7xl);
      line-height: var(--tw-leading, var(--text-7xl--line-height));
    }
  }
  .xl\:text-9xl {
    @media (width >= 80rem) {
      font-size: var(--text-9xl);
      line-height: var(--tw-leading, var(--text-9xl--line-height));
    }
  }
  .xl\:font-normal {
    @media (width >= 80rem) {
      --tw-font-weight: var(--font-weight-normal);
      font-weight: var(--font-weight-normal);
    }
  }
  .hover\:xl\:-translate-y-10 {
    &:hover {
      @media (hover: hover) {
        @media (width >= 80rem) {
          --tw-translate-y: calc(var(--spacing) * -10);
          translate: var(--tw-translate-x) var(--tw-translate-y);
        }
      }
    }
  }
  .hover\:xl\:translate-y-20 {
    &:hover {
      @media (hover: hover) {
        @media (width >= 80rem) {
          --tw-translate-y: calc(var(--spacing) * 20);
          translate: var(--tw-translate-x) var(--tw-translate-y);
        }
      }
    }
  }
  .\32 xl\:flex {
    @media (width >= 96rem) {
      display: flex;
    }
  }
  .\32 xl\:hidden {
    @media (width >= 96rem) {
      display: none;
    }
  }
  .\32 xl\:w-1\/2 {
    @media (width >= 96rem) {
      width: calc(1/2 * 100%);
    }
  }
  .\32 xl\:w-2\/3 {
    @media (width >= 96rem) {
      width: calc(2/3 * 100%);
    }
  }
  .\32 xl\:w-9\/12 {
    @media (width >= 96rem) {
      width: calc(9/12 * 100%);
    }
  }
  .\32 xl\:flex-row {
    @media (width >= 96rem) {
      flex-direction: row;
    }
  }
  .\32 xl\:items-start {
    @media (width >= 96rem) {
      align-items: flex-start;
    }
  }
  .\32 xl\:gap-10 {
    @media (width >= 96rem) {
      gap: calc(var(--spacing) * 10);
    }
  }
  .\32 xl\:gap-16 {
    @media (width >= 96rem) {
      gap: calc(var(--spacing) * 16);
    }
  }
  .\32 xl\:gap-64 {
    @media (width >= 96rem) {
      gap: calc(var(--spacing) * 64);
    }
  }
  .\32 xl\:bg-white {
    @media (width >= 96rem) {
      background-color: var(--color-white);
    }
  }
  .\32 xl\:bg-\[url\(\)\] {
    @media (width >= 96rem) {
      background-image: url();
    }
  }
  .\32 xl\:px-40 {
    @media (width >= 96rem) {
      padding-inline: calc(var(--spacing) * 40);
    }
  }
  .\32 xl\:px-80 {
    @media (width >= 96rem) {
      padding-inline: calc(var(--spacing) * 80);
    }
  }
  .\32 xl\:py-30 {
    @media (width >= 96rem) {
      padding-block: calc(var(--spacing) * 30);
    }
  }
  .\32 xl\:text-start {
    @media (width >= 96rem) {
      text-align: start;
    }
  }
  .\32 xl\:text-2xl {
    @media (width >= 96rem) {
      font-size: var(--text-2xl);
      line-height: var(--tw-leading, var(--text-2xl--line-height));
    }
  }
  .\32 xl\:text-3xl {
    @media (width >= 96rem) {
      font-size: var(--text-3xl);
      line-height: var(--tw-leading, var(--text-3xl--line-height));
    }
  }
  .\32 xl\:text-7xl {
    @media (width >= 96rem) {
      font-size: var(--text-7xl);
      line-height: var(--tw-leading, var(--text-7xl--line-height));
    }
  }
  .\32 xl\:text-8xl {
    @media (width >= 96rem) {
      font-size: var(--text-8xl);
      line-height: var(--tw-leading, var(--text-8xl--line-height));
    }
  }
  .\32 xl\:text-9xl {
    @media (width >= 96rem) {
      font-size: var(--text-9xl);
      line-height: var(--tw-leading, var(--text-9xl--line-height));
    }
  }
  .\32 xl\:text-\[180px\] {
    @media (width >= 96rem) {
      font-size: 180px;
    }
  }
  .\32 xl\:leading-24 {
    @media (width >= 96rem) {
      --tw-leading: calc(var(--spacing) * 24);
      line-height: calc(var(--spacing) * 24);
    }
  }
  .\32 xl\:text-current {
    @media (width >= 96rem) {
      color: currentcolor;
    }
  }
  .\32 xl\:text-primary {
    @media (width >= 96rem) {
      color: var(--color-primary);
    }
  }
}
@font-face {
  font-family: 'Joyful';
  src: url('/assets/fonts/Joyful.otf');
}
.button-line-absolute-theme {
  position: absolute;
  display: none;
  background-color: var(--color-primary);
  transition-property: all;
  transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
  transition-duration: var(--tw-duration, var(--default-transition-duration));
  --tw-duration: 500ms;
  transition-duration: 500ms;
  @media (width >= 64rem) {
    display: block;
  }
}
.button-line-absolute-white {
  position: absolute;
  display: none;
  background-color: var(--color-white);
  transition-property: all;
  transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
  transition-duration: var(--tw-duration, var(--default-transition-duration));
  --tw-duration: 500ms;
  transition-duration: 500ms;
  @media (width >= 64rem) {
    display: block;
  }
}
.small-layout-padding {
  display: flex;
  flex-direction: column;
  gap: calc(var(--spacing) * 8);
  padding-inline: calc(var(--spacing) * 4);
  padding-block: calc(var(--spacing) * 14);
  @media (width >= 80rem) {
    gap: calc(var(--spacing) * 16);
  }
  @media (width >= 80rem) {
    padding-inline: calc(var(--spacing) * 16);
  }
  @media (width >= 80rem) {
    padding-block: calc(var(--spacing) * 30);
  }
}
.progress-ring__circle {
  transition: stroke-dashoffset 0.35s;
  transform: rotate(-90deg);
  transform-origin: 50% 50%;
}
p {
  --tw-font-weight: var(--font-weight-light);
  font-weight: var(--font-weight-light);
}
@layer base {
  * {
    scrollbar-color: initial;
    scrollbar-width: initial;
  }
}
@property --tw-translate-x {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-translate-y {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-translate-z {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-rotate-x {
  syntax: "*";
  inherits: false;
}
@property --tw-rotate-y {
  syntax: "*";
  inherits: false;
}
@property --tw-rotate-z {
  syntax: "*";
  inherits: false;
}
@property --tw-skew-x {
  syntax: "*";
  inherits: false;
}
@property --tw-skew-y {
  syntax: "*";
  inherits: false;
}
@property --tw-border-style {
  syntax: "*";
  inherits: false;
  initial-value: solid;
}
@property --tw-gradient-position {
  syntax: "*";
  inherits: false;
}
@property --tw-gradient-from {
  syntax: "<color>";
  inherits: false;
  initial-value: #0000;
}
@property --tw-gradient-via {
  syntax: "<color>";
  inherits: false;
  initial-value: #0000;
}
@property --tw-gradient-to {
  syntax: "<color>";
  inherits: false;
  initial-value: #0000;
}
@property --tw-gradient-stops {
  syntax: "*";
  inherits: false;
}
@property --tw-gradient-via-stops {
  syntax: "*";
  inherits: false;
}
@property --tw-gradient-from-position {
  syntax: "<length-percentage>";
  inherits: false;
  initial-value: 0%;
}
@property --tw-gradient-via-position {
  syntax: "<length-percentage>";
  inherits: false;
  initial-value: 50%;
}
@property --tw-gradient-to-position {
  syntax: "<length-percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-leading {
  syntax: "*";
  inherits: false;
}
@property --tw-tracking {
  syntax: "*";
  inherits: false;
}
@property --tw-font-weight {
  syntax: "*";
  inherits: false;
}
@property --tw-outline-style {
  syntax: "*";
  inherits: false;
  initial-value: solid;
}
@property --tw-blur {
  syntax: "*";
  inherits: false;
}
@property --tw-brightness {
  syntax: "*";
  inherits: false;
}
@property --tw-contrast {
  syntax: "*";
  inherits: false;
}
@property --tw-grayscale {
  syntax: "*";
  inherits: false;
}
@property --tw-hue-rotate {
  syntax: "*";
  inherits: false;
}
@property --tw-invert {
  syntax: "*";
  inherits: false;
}
@property --tw-opacity {
  syntax: "*";
  inherits: false;
}
@property --tw-saturate {
  syntax: "*";
  inherits: false;
}
@property --tw-sepia {
  syntax: "*";
  inherits: false;
}
@property --tw-drop-shadow {
  syntax: "*";
  inherits: false;
}
@property --tw-drop-shadow-color {
  syntax: "*";
  inherits: false;
}
@property --tw-drop-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-drop-shadow-size {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-blur {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-brightness {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-contrast {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-grayscale {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-hue-rotate {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-invert {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-opacity {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-saturate {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-sepia {
  syntax: "*";
  inherits: false;
}
@property --tw-duration {
  syntax: "*";
  inherits: false;
}
@property --tw-ease {
  syntax: "*";
  inherits: false;
}
@property --tw-content {
  syntax: "*";
  initial-value: "";
  inherits: false;
}
@keyframes slide {
  0% {
    transform: translateX(0);
  }
  100% {
    transform: translateX(-51.2%);
  }
}
@layer properties {
  @supports ((-webkit-hyphens: none) and (not (margin-trim: inline))) or ((-moz-orient: inline) and (not (color:rgb(from red r g b)))) {
    *, ::before, ::after, ::backdrop {
      --tw-translate-x: 0;
      --tw-translate-y: 0;
      --tw-translate-z: 0;
      --tw-rotate-x: initial;
      --tw-rotate-y: initial;
      --tw-rotate-z: initial;
      --tw-skew-x: initial;
      --tw-skew-y: initial;
      --tw-border-style: solid;
      --tw-gradient-position: initial;
      --tw-gradient-from: #0000;
      --tw-gradient-via: #0000;
      --tw-gradient-to: #0000;
      --tw-gradient-stops: initial;
      --tw-gradient-via-stops: initial;
      --tw-gradient-from-position: 0%;
      --tw-gradient-via-position: 50%;
      --tw-gradient-to-position: 100%;
      --tw-leading: initial;
      --tw-tracking: initial;
      --tw-font-weight: initial;
      --tw-outline-style: solid;
      --tw-blur: initial;
      --tw-brightness: initial;
      --tw-contrast: initial;
      --tw-grayscale: initial;
      --tw-hue-rotate: initial;
      --tw-invert: initial;
      --tw-opacity: initial;
      --tw-saturate: initial;
      --tw-sepia: initial;
      --tw-drop-shadow: initial;
      --tw-drop-shadow-color: initial;
      --tw-drop-shadow-alpha: 100%;
      --tw-drop-shadow-size: initial;
      --tw-backdrop-blur: initial;
      --tw-backdrop-brightness: initial;
      --tw-backdrop-contrast: initial;
      --tw-backdrop-grayscale: initial;
      --tw-backdrop-hue-rotate: initial;
      --tw-backdrop-invert: initial;
      --tw-backdrop-opacity: initial;
      --tw-backdrop-saturate: initial;
      --tw-backdrop-sepia: initial;
      --tw-duration: initial;
      --tw-ease: initial;
      --tw-content: "";
    }
  }
}
